// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "pch.h"
#include "HDFcommagent.h"

/////////////////////////////////////////////////////////////////////////////
// CHDFCommAgent

IMPLEMENT_DYNCREATE(CHDFCommAgent, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CHDFCommAgent properties

/////////////////////////////////////////////////////////////////////////////
// CHDFCommAgent operations

void CHDFCommAgent::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}


///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>//  HTS API를 이용하기 위해 최초로 실행</b></td></tr>
// <tr><td><font color='blue'>LONG</font></td><td><b><font color='blue'>nType</b></font></td><td><b><pre>
// 무조건 1
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -1	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommInit(1);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommInit(LONG nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nType);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// HTS API를 끝내기 위해 소켓종료</b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>bSocketClose</b></font></td><td><b><pre>
// 무조건 TRUE
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> void </u></b></font></td><td><b><pre>
// 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommTerminate(TRUE);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
void CHDFCommAgent::CommTerminate(long bSocketClose)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bSocketClose);
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// HTS 로그인</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sUserID</b></font></td><td><b><pre>
// HTS ID
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sPwd</b></font></td><td><b><pre>
// HTS PASSWORD
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sCertPwd</b></font></td><td><b><pre>
// 공인인증서 비밀번호
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  1	: 성공 
//  1보다 작으면	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommLogin(sUserID, sPwd, sCertPwd);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommLogin(LPCTSTR sUserID, LPCTSTR sPwd, LPCTSTR sCertPwd)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sUserID, sPwd, sCertPwd);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// HTS 로그아웃</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sUserID</b></font></td><td><b><pre>
// HTS ID
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommLogout(sUserID);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommLogout(LPCTSTR sUserID)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sUserID);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// RQ 호출</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sTrCode</b></font></td><td><b><pre>
// TrCode
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sInputData</b></font></td><td><b><pre>
// 전송데이터
// </pre></b></td></tr>
// <tr><td><font color='blue'>LONG</font></td><td><b><font color='blue'>nLength</b></font></td><td><b><pre>
// sInputData(전송데이터)의 길이
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sPrevOrNext</b></font></td><td><b><pre>
// 연속구분(0:완료, 1:연속)
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  1~256 : 정상(반환되는값은 OnDataRecv, OnGetMsgWithRqId에서 사용됨)
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommRqData(sTrCode, sInputData, sInputData.GetLength(), "0");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommRqData(LPCTSTR sTrCode, LPCTSTR sInputData, LONG nLength, LPCTSTR sPrevOrNext)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR ;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTrCode, sInputData, nLength, sPrevOrNext);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 종목 실시간 데이타 수신을 설정</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sJongmokCode</b></font></td><td><b><pre>
// 종목코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nRealType</b></font></td><td><b><pre>
// 실시간코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommSetBroad((LPCTSTR)sJongmokCode, 76);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommSetBroad(LPCTSTR sJongmokCode, long nRealType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sJongmokCode, nRealType);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>//  종목 실시간 데이타 수신을 해제</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sJongmokCode</b></font></td><td><b><pre>
// 종목코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nRealType</b></font></td><td><b><pre>
// 실시간코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommRemoveBroad(sJongmokCode, 76);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommRemoveBroad(LPCTSTR sJongmokCode, long nRealType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sJongmokCode, nRealType);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 수신한 해당 TR의 데이터의 총 갯수를 가져온다.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sJongmokCode</b></font></td><td><b><pre>
// TR CODE
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nRealType</b></font></td><td><b><pre>
// 실시간코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sFieldName</b></font></td><td><b><pre>
// 필드이름(레코드이름)
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// 반복갯수(RowCount) 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetRepeatCnt(sTrCode, -1, "OutRec1");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommGetRepeatCnt(LPCTSTR sJongmokCode, long nRealType, LPCTSTR sFieldName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sJongmokCode, nRealType, sFieldName);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 수신한 해당 TR의 i번째 데이터의 sInnerFieldName값을 가져온다.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sJongmokCode</b></font></td><td><b><pre>
// TR CODE
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nRealType</b></font></td><td><b><pre>
// 실시간코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sFieldName</b></font></td><td><b><pre>
// 필드이름
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nIndex</b></font></td><td><b><pre>
// 인덱스
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sInnerFieldName</b></font></td><td><b><pre>
// TrData\{TR명}.dat파일의 필드명
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 요청한 값 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetData(sTrCode, -1, "OutRec1", i, "종목코드");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetData(LPCTSTR sJongmokCode, long nRealType, LPCTSTR sFieldName, long nIndex, LPCTSTR sInnerFieldName)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sJongmokCode, nRealType, sFieldName, nIndex, sInnerFieldName);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 해당하는 Data전체를 가져오는 함수.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sJongmokCode</b></font></td><td><b><pre>
// TR CODE
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nRealType</b></font></td><td><b><pre>
// 실시간코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nOffset</b></font></td><td><b><pre>
// 오프셋
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nLength</b></font></td><td><b><pre>
// 가져올 버퍼 길이
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nPointLength</b></font></td><td><b><pre>
// 0
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sDataType</b></font></td><td><b><pre>
// 무조건 "A"
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 해당하는 Data 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// TR : CommGetDataDirect(sTrCode, -1, 0, nRepeatCnt * 32, 0, "A");
// 실시간 : CommGetDataDirect(strKey, nRealType, 0, 230, 0, "A");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetDataDirect(LPCTSTR sJongmokCode, long nRealType, long nOffset, long nLength, long nPointLength, LPCTSTR sDataType)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sJongmokCode, nRealType, nOffset, nLength, nPointLength, sDataType);
	return result;
}

CString CHDFCommAgent::CommGetDataBinary(LPCTSTR sJongmokCode, long nRealType, long nOffset, long nLength, long nPointLength, LPCTSTR sDataType)
{
	VARIANT var;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_VARIANT, (void*)&var, parms,
		sJongmokCode, nRealType, nOffset, nLength, nPointLength, sDataType);

	LPBYTE pByte = new BYTE[nLength];
	void *pArrayData = NULL;

	SafeArrayAccessData(var.parray, &pArrayData);
	memcpy(pByte, pArrayData, nLength);
	SafeArrayUnaccessData(var.parray);
	
	CString result = CString((LPCSTR)pByte, nLength);
	
	delete pByte;

	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 통신 연결상태 확인</b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// 1	: 정상 
// 0	: 오류 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetConnectState();
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommGetConnectState()
{
	long result;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// FID조회요청함수.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sFidCode</b></font></td><td><b><pre>
// FID코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sInputData</b></font></td><td><b><pre>
// 전송데이터
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sReqFidList</b></font></td><td><b><pre>
// FID필드리스트
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nLength</b></font></td><td><b><pre>
// sInputData(전송데이터)의 길이
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sPrevOrNext</b></font></td><td><b><pre>
// 연속구분(0:완료, 1:연속)
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommFIDRqData(sFidCode, sInputData, sReqFidList, sInputData.GetLength(), "0");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommFIDRqData(LPCTSTR sFidCode, LPCTSTR sInputData, LPCTSTR sReqFidList,long nLength, LPCTSTR sPrevOrNext)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFidCode, sInputData, sReqFidList, nLength, sPrevOrNext);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 주문-체결 등록</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sUserID</b></font></td><td><b><pre>
// HTS ID
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sAccNo</b></font></td><td><b><pre>
// 계좌번호
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommSetJumunChe(sUserID, sAccNo);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommSetJumunChe(LPCTSTR sUserID, LPCTSTR sAccNo)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sUserID, sAccNo);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 주문-체결 해제</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sUserID</b></font></td><td><b><pre>
// HTS ID
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sAccNo</b></font></td><td><b><pre>
// 계좌번호
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommRemoveJumunChe(sUserID, sAccNo);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommRemoveJumunChe(LPCTSTR sUserID, LPCTSTR sAccNo)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sUserID, sAccNo);
	return result;
}

/******************************************************************************
/// 
/// \param   sTrCode	=>	
/// \param   sInputData	=>	
/// \return  long 		=>	
/// \example  			=>	
******************************************************************************/
///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 주문</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sTrCode</b></font></td><td><b><pre>
// 주문TR CODE
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sInputData</b></font></td><td><b><pre>
// 전송데이터
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// 주문요청번호 
//  1~256 : 정상(반환되는값은 OnDataRecv, OnGetMsgWithRqId에서 사용됨)
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommJumunSvr(sTrCode, sInput);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommJumunSvr(LPCTSTR sTrCode, LPCTSTR sInputData)
{
	long result;
 	static BYTE parms[] =
	VTS_BSTR VTS_BSTR;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTrCode, sInputData);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 계좌정보요청(AQ0101호출)</b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
//  0	: 성공 
// -값	: 실패 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommAccInfo();
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommAccInfo()
{
	long result;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// ※사용안함. 미체결관련</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sAcctNo</b></font></td><td><b><pre>
// sAcctNo
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sAcctPw</b></font></td><td><b><pre>
// sAcctPw
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// value 
// value 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// value
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::CommMiCheFoForAcc(LPCTSTR sAcctNo, LPCTSTR sAcctPw)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sAcctNo, sAcctPw);
	return result;
}


///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// ※사용안함. </b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>hWnd</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nKey</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szTRCode</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szInput</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nInputLen</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nHeadType</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nAccountIndex</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// value 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// value
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::Transact(long hWnd, long nKey, LPCTSTR szTRCode, LPCTSTR szInput, long nInputLen, long nHeadType, long nAccountIndex)
{
	long result;
	static BYTE parms[] = 
		VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, nKey, szTRCode, szInput, nInputLen, nHeadType, nAccountIndex);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// ※사용안함. </b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>hWnd</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szBCType</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szInput</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nCodeLen</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nInputLen</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// value 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// value
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::Attach(long hWnd, LPCTSTR szBCType, LPCTSTR szInput, long nCodeLen, long nInputLen)
{
	long result;
	static BYTE parms[] = 
		VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, szBCType, szInput, nCodeLen, nInputLen);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// ※사용안함. </b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>hWnd</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szBCType</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>szInput</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nCodeLen</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nInputLen</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> long </u></b></font></td><td><b><pre>
// value 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// value
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
long CHDFCommAgent::Detach(long hWnd, LPCTSTR szBCType, LPCTSTR szInput, long nCodeLen, long nInputLen)
{
	long result;
	static BYTE parms[] = 
		VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, szBCType, szInput, nCodeLen, nInputLen);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 해당계좌의 딜러번호를 가져온다.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sAcctNo</b></font></td><td><b><pre>
// 계좌번호
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 딜러번호 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetDealNo(strAcctNo);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetDealNo(LPCTSTR sAcctNo)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sAcctNo);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 해외 주문시 가격 변환.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sSeries</b></font></td><td><b><pre>
// 종목코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sPrice</b></font></td><td><b><pre>
// 주문가격
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nType</b></font></td><td><b><pre>
// 0 : 134180    (호가가격)    -> 134'18.0   (포멧된가격)
// 1 : 134'18.0  (포멧된 가격) -> 134.562500 (수치화가격)
// 2 : 134.562500(수치화 가격) -> 134180     (호가가격)
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 변환된 가격
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetHWOrdPrice(strSeries, strCloseP, 0);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetHWOrdPrice(LPCTSTR sSeries, LPCTSTR sPrice, long nType)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sSeries, sPrice, nType);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// Excel에서 사용하기 위한 Directory 설정</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sOCXPath</b></font></td><td><b><pre>
// OCX가 있는 디렉토리 경로
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> void </u></b></font></td><td><b><pre>
// 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// SetOCXPath("c:\");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
void CHDFCommAgent::SetOCXPath(LPCTSTR sOCXPath)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR ;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_EMPTY, (void*)&result, parms,
		sOCXPath);
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// ※사용안함 ==> CommReqMakeCod()로 대체함. // 해외에서 사용될 JMCODE.cod 파일을 만들기 위해 서버로 서비스 요청한다. </b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>strExchCd</b></font></td><td><b><pre>
// value
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> void </u></b></font></td><td><b><pre>
// value 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// value
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
//void CHDFCommAgent::CommReqMstInfo(LPCTSTR strExchCd)
//{
//	long result;
//	static BYTE parms[] =
//		VTS_BSTR ;
//	InvokeHelper(0x18, DISPATCH_METHOD, VT_EMPTY, (void*)&result, parms,
//		strExchCd);
//}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 해외용 mst파일로 부터 정보를 반환하는 함수.</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sSeries</b></font></td><td><b><pre>
// 종목코드
// </pre></b></td></tr>
// <tr><td><font color='blue'>long</font></td><td><b><font color='blue'>nInfo</b></font></td><td><b><pre>
// 정보Index
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 해당값
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetHWInfo(strSeries, 7)
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetHWInfo(LPCTSTR sSeries, long nInfo)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sSeries, nInfo);
	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 계좌정보를 반환하는 함수</b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 계좌정보반환
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetAccInfo();
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetAccInfo()
{
	CString result;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}


///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// mst용 cod파일 정보를 받아와서 파일로 생성하는 함수</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>strParam</b></font></td><td><b><pre>
// 받고자 하는데이타 유형|인자값  (구분자 : 파이프 '|')
// 대소문자 구분안함.
// 전체요청과 단일요청을 함께 사용금지!
// 혹시라도 사용하게 되면 단일요청이든 전체요청이든 모든 응답값을 수신 후에 호출할 것!
// "PMCODE" : /mst/<a href=./pmcodeStruct.html>PMCODE&#46;cod</a>	// 인자값 : 거래소코드[5] (빈값일시 전부)
// "JMCODE" : /mst/<a href=./jmcodeStruct.html>JMCODE&#46;cod</a>	// 인자값 : 기준날짜[8]
// "MRKT"   : /mst/<a href=./mrktStruct.html>MRKT&#46;cod</a>	// 인자값 : 기준날짜[8]
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> void </u></b></font></td><td><b><pre>
// 
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommReqMakeCod("ALL");
// CommReqMakeCod("MRKT");
// CommReqMakeCod("JMCODE");
// CommReqMakeCod("JMCODE|CME");
// CommReqMakeCod("ojmcode|CME");
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
void CHDFCommAgent::CommReqMakeCod(LPCTSTR strParam, long nMstType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_EMPTY, (void*)&result, parms,
		strParam, nMstType);
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// 함수 조회 후 다음 조회를 하기 위한 다음키값을 반환하는 함수</b></td></tr>
// <tr><td><font color='blue'>int</font></td><td><b><font color='blue'>nRqId</b></font></td><td><b><pre>
// OnDataRecv() 두번째 파라미터값 혹은 서비스 호출후 반환된 값
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sReserved</b></font></td><td><b><pre>
// CommFIDRqData 함수 제일 마지막 파라미터로 사용될 값.
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 다음키값
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetNextKey(nRqId, sReserved);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetNextKey(long nRqId, LPCTSTR sReserved)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR ;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRqId, sReserved);

	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// Comment</b></td></tr>
// <tr><td><font color='blue'>int</font></td><td><b><font color='blue'>nJangubun</b></font></td><td><b><pre>
// 1 : 해외영업일
// 3 : 국내영업일
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 국내/해외 영업일
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetBusinessDay(1);
// CommGetBusinessDay(3);
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetBusinessDay(long nJangubun)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 ;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nJangubun);

	return result;
}

///////////////////////////////////////////////////////////////////////////////
// <table border='1' width='80%' cellpadding='5' bordercolor='gray' cellspacing='0' style='margin-left:30px; margin-bottom:15px; border-collapse: collapse;'><col width='15%'/><col width='15%'/><col width='70%'/>
// <tr><td colspan='3'><b>// Comment</b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sTag</b></font></td><td><b><pre>
// 요청데이터 (ex: "시스템구분")
// </pre></b></td></tr>
// <tr><td><font color='blue'>LPCTSTR</font></td><td><b><font color='blue'>sParam</b></font></td><td><b><pre>
// (선택)sParam 데이터 가공이나 추가적인 요청데이터
// </pre></b></td></tr>
// <tr><td><font color='blue'>Return Type</font></td><td><font color='blue'><b><u> CString </u></b></font></td><td><b><pre>
// 해당하는 요청데이터의 값을 리턴함.
// </pre></b></td></tr>
// <tr><td><b><i> Example </i></b></td><td></td><td><b><i><pre>
// CommGetInfo("시스템구분")		==> 1
// CommGetInfo("시스템구분", "1")	==> H
// </pre></i></b></td></tr>
// </table>
///////////////////////////////////////////////////////////////////////////////
CString CHDFCommAgent::CommGetInfo(LPCTSTR sTag, LPCTSTR sParam)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR ;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sTag, sParam);

	return result;
}
